name: CI/CD traffic-a22-data-quality

on:
  push:
    paths:
      - "traffic-a22-data-quality/**"
      - ".github/workflows/ci-traffic-a22-data-quality.yml"
      - "!*.md"

env:
  PROJECT_NAME: el-a22-traffic-data-quality
  WORKING_DIRECTORY: traffic-a22-data-quality
  DOCKER_IMAGE: ghcr.io/${{ github.repository }}/el-a22-traffic-data-quality
  DOCKER_TAG: ${{ github.sha }}
  KUBERNETES_NAMESPACE: collector
  VALUES_YAML: infrastructure/helm/values.yaml
  K8S_NAME: el-a22-traffic-data-quality

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout source code
        uses: noi-techpark/github-actions/checkout@v2
      - name: REUSE Compliance Check
        uses: fsfe/reuse-action@v1

      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version-file: ${{ env.WORKING_DIRECTORY }}/src/go.mod
      
      - name: Run automated tests
        run: go test ./...
        working-directory: ${{ env.WORKING_DIRECTORY }}/src

  build:
    runs-on: ubuntu-22.04
    needs: test
    concurrency: build
    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Build and push images
      uses: noi-techpark/github-actions/docker-build-and-push@v2
      with:
        working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure
        docker-username: ${{ github.actor }}
        docker-password: ${{ secrets.GITHUB_TOKEN }}

  deploy-test:
    runs-on: ubuntu-22.04
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev/a22-traffic-data-quality'
    concurrency: deploy-test
    environment: test
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Customize values.yaml
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: |
          yq -i '.image.repository = "${{ env.DOCKER_IMAGE }}"' ${{ env.VALUES_YAML }}
          yq -i '.image.tag = "${{ env.DOCKER_TAG }}"' ${{ env.VALUES_YAML }}
          yq -i '.image.pullPolicy = "IfNotPresent"' ${{ env.VALUES_YAML }}
          yq -i '.envSecret.ODH_CLIENT_SECRET = "${{ secrets.COMBINED_CLIENT_SECRET_TEST }}"' ${{ env.VALUES_YAML }}
                    
          yq -i '.env.X_BDP_BASE_URL = "https://mobility.share.opendatahub.testingmachine.eu"' ${{ env.VALUES_YAML }}
          yq -i '.env.X_BDP_PROVENANCE_VERSION = "${{ github.sha }}"' ${{ env.VALUES_YAML }}
          yq -i '.env.X_BDP_PROVENANCE_NAME = "${{ env.PROJECT_NAME }}"' ${{ env.VALUES_YAML }}
          
          yq -i '.env.X_NINJA_BASE_URL = "https://mobility.api.opendatahub.testingmachine.eu"' ${{ env.VALUES_YAML }}
          yq -i '.env.X_NINJA_REFERER = "${{ env.PROJECT_NAME }}"' ${{ env.VALUES_YAML }}

      - name: Deploy on cluster  
        uses: noi-techpark/github-actions/helm-deploy@v2
        with:
          k8s-name: ${{ env.K8S_NAME }}
          k8s-namespace: collector
          chart-path: helm/generic-collector
          values-file: ${{ env.WORKING_DIRECTORY}}/${{ env.VALUES_YAML }}
          aws-access-key-id: ${{ secrets.AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_KEY_SECRET }}
          aws-eks-cluster-name: aws-main-eu-01
          aws-region: eu-west-1

  # deploy-prod:
  #   runs-on: ubuntu-22.04
  #   needs: test
  #   if: github.ref == 'refs/heads/prod'
  #   concurrency: deploy-prod
  #   steps:
  #     - name: Checkout source code
  #       uses: actions/checkout@v3

  #     - name: Setup go
  #       uses: actions/setup-go@v4
  #       with:
  #         go-version-file: ${{ env.WORKING_DIRECTORY }}/src/go.mod

  #     - name: Create .env file
  #       uses: noi-techpark/github-actions/env-file@v2
  #       with:
  #         working-directory: ${{ env.WORKING_DIRECTORY }}
  #       env:
  #         X_COMPOSE_PROJECT_NAME: ${{ env.PROJECT_NAME }}
  #         X_DOCKER_IMAGE: ${{ env.DOCKER_IMAGE }}
  #         X_DOCKER_TAG: ${{ env.DOCKER_TAG }}

  #         X_ODH_TOKEN_URL: https://auth.opendatahub.com/auth/realms/noi/protocol/openid-connect/token
  #         X_ODH_CLIENT_ID: odh-a22-dataprocessor
  #         X_ODH_CLIENT_SECRET: ${{ secrets.COMBINED_CLIENT_SECRET_PROD }}
          
  #         X_BDP_BASE_URL: https://mobility.share.opendatahub.com
  #         X_BDP_PROVENANCE_VERSION: ${{ github.sha }}
  #         X_BDP_PROVENANCE_NAME: ${{ env.PROJECT_NAME }}
  #         X_BDP_ORIGIN: a22

  #         X_NINJA_BASE_URL: https://mobility.api.opendatahub.com
  #         X_NINJA_REFERER: ${{ env.PROJECT_NAME }}
  #         X_NINJA_QUERY_LIMIT: 50000

  #         X_EL_STATION_TYPE: TrafficSensor
  #         X_EL_PARENT_STATION_TYPE: TrafficDirection
  #         X_EL_BASE_PERIOD: 600

  #         X_LOG_LEVEL: INFO

  #         # run once per day, calculates the previous day's sums
  #         X_SCHEDULER_CRON: "0 10 4 * * *"
          
  #     - name: Build go application
  #       run: go build -o main main.go
  #       working-directory: ${{ env.WORKING_DIRECTORY }}/src

  #     - name: Build and push 
  #       uses: noi-techpark/github-actions/docker-build-and-push@v2
  #       with:
  #         working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure
  #         docker-username: ${{ github.actor }}
  #         docker-password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Deploy application
  #       uses: noi-techpark/github-actions/docker-deploy@v2
  #       with:
  #         working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure/ansible
  #         hosts: 'prod'
  #         ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
  #         docker-username: 'noi-techpark-bot'
  #         docker-password: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
  #         project-name: ${{ env.PROJECT_NAME }}
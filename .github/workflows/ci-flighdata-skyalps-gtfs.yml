name: CI/CD flighdata-skyalps-gtfs

on:
  push:
    paths:
      - "flighdata-skyalps-gtfs/**"
      - ".github/workflows/ci-flighdata-skyalps-gtfs.yml"
      - "!*.md"

env:
  WORKING_DIRECTORY: flighdata-skyalps-gtfs
  PROJECT_NAME: odh-mobility-el-flighdata-skyalps-gtfs
  DOCKER_IMAGE: ghcr.io/${{ github.repository }}/odh-mobility-el-flighdata-skyalps-gtfs
  DOCKER_TAG: ${{ github.sha }}
  JAVA_VERSION: "17"

jobs:
  test:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v2
      - name: REUSE Compliance Check
        uses: fsfe/reuse-action@v5
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
          cache: maven

      - name: Test with Maven
        run: mvn -B -U clean compile test
        working-directory: ${{ env.WORKING_DIRECTORY }}

  # Deploy Test
  deploy-test-flighdata-skyalps-gtfs:
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/main'
    needs: test
    concurrency: deploy-test-flighdata-skyalps-gtfs
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Create .env file
        uses: noi-techpark/github-actions/env-file@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}
        env:
          # General deployment options
          X_COMPOSE_PROJECT_NAME: ${{ env.PROJECT_NAME }}
          X_DOCKER_IMAGE: ${{ env.DOCKER_IMAGE }}
          X_DOCKER_TAG: ${{ env.DOCKER_TAG }}
          X_JAVA_OPTIONS: -Xms128m -Xmx512m

          X_ODH_BASE_URL: https://mobility.api.opendatahub.testingmachine.eu

          X_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
          X_AWS_ACCESS_SECRET_KEY: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
          X_AWS_BUCKET_NAME: flighdata-skyalps-gtfs-test

          X_SCHEDULER_CRON: "0 0 */24 * * *"

          # Logging
          X_LOG_LEVEL: info
          X_LOG_STYLE: json

      - name: Build project
        uses: noi-techpark/github-actions/maven-build@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}
          java-version: ${{ env.JAVA_VERSION }}
          build-command: "mvn -B -DskipTests -DfinalName=ROOT clean package"

      - name: Build and push images
        uses: noi-techpark/github-actions/docker-build-and-push@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure
          docker-username: ${{ github.actor }}
          docker-password: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy application
        uses: noi-techpark/github-actions/docker-deploy@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure/ansible
          hosts: "test"
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          docker-username: "noi-techpark-bot"
          docker-password: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          project-name: ${{ env.PROJECT_NAME }}

  # Deploy Prod
  deploy-prod-flighdata-skyalps-gtfs:
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/prod'
    needs: test
    concurrency: deploy-prod-flighdata-skyalps-gtfs
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Create .env file
        uses: noi-techpark/github-actions/env-file@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}
        env:
          # General deployment options
          X_COMPOSE_PROJECT_NAME: ${{ env.PROJECT_NAME }}
          X_DOCKER_IMAGE: ${{ env.DOCKER_IMAGE }}
          X_DOCKER_TAG: ${{ env.DOCKER_TAG }}
          X_JAVA_OPTIONS: -Xms128m -Xmx512m

          X_ODH_BASE_URL: https://mobility.api.opendatahub.com

          X_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
          X_AWS_ACCESS_SECRET_KEY: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
          X_AWS_BUCKET_NAME: flighdata-skyalps-gtfs-prod

          X_SCHEDULER_CRON: "0 0 */24 * * *"

          # Logging
          X_LOG_LEVEL: info
          X_LOG_STYLE: json

      - name: Build project
        uses: noi-techpark/github-actions/maven-build@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}
          java-version: ${{ env.JAVA_VERSION }}
          build-command: "mvn -B -DskipTests -DfinalName=ROOT clean package"

      - name: Build and push images
        uses: noi-techpark/github-actions/docker-build-and-push@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure
          docker-username: ${{ github.actor }}
          docker-password: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy application
        uses: noi-techpark/github-actions/docker-deploy@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure/ansible
          hosts: "prod"
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          docker-username: "noi-techpark-bot"
          docker-password: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          project-name: ${{ env.PROJECT_NAME }}

name: CI/CD parking-free-slot-calculation

on:
  push:
    paths:
      - "parking-free-slot-calculation/**"
      - ".github/workflows/ci-parking-free-slot-calculation.yml"
      - "!*.md"

env:
  WORKING_DIRECTORY: parking-free-slot-calculation
  PROJECT_NAME: odh-mobility-el-parking-free-slot-calculation
  DOCKER_IMAGE: ghcr.io/${{ github.repository }}/odh-mobility-el-parking-free-slot-calculation
  DOCKER_TAG: ${{ github.sha }}

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: REUSE Compliance Check
        uses: fsfe/reuse-action@v1

      - name: Test code
        uses: noi-techpark/github-actions/pip-test@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}
          test-command: |
            echo "WARNING: NO TESTS FOUND!"

  # Deploy Test
  deploy-test-parking-free-slot-calculation:
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/main'
    needs: test
    concurrency: deploy-test-parking-free-slot-calculation
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Create .env file
        uses: noi-techpark/github-actions/env-file@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}
        env:
          # General deployment options
          X_COMPOSE_PROJECT_NAME: ${{ env.PROJECT_NAME }}
          X_DOCKER_IMAGE: ${{ env.DOCKER_IMAGE }}
          X_DOCKER_TAG: ${{ env.DOCKER_TAG }}

          # Program specific env variables
          X_AUTHENTICATION_SERVER: https://auth.opendatahub.testingmachine.eu/auth/
          X_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET_TEST }}
          X_CLIENT_ID: odh-mobility-datacollector
          X_ODH_MOBILITY_API_NINJA: https://mobility.api.opendatahub.testingmachine.eu/v2
          X_ODH_MOBILITY_API_WRITER: https://mobility.share.opendatahub.testingmachine.eu
          X_PROVENANCE_LINEAGE: NOI
          X_PROVENANCE_NAME: ${{ env.PROJECT_NAME }}
          X_PROVENANCE_VERSION: ${{ github.sha }}
          # run job every n seconds
          X_JOB_SCHEDULE_SEC: 300

      - name: Build and push images
        uses: noi-techpark/github-actions/docker-build-and-push@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure
          docker-username: ${{ github.actor }}
          docker-password: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy application
        uses: noi-techpark/github-actions/docker-deploy@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure/ansible
          hosts: "test"
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          docker-username: "noi-techpark-bot"
          docker-password: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          project-name: ${{ env.PROJECT_NAME }}

  # Deploy Prod
  deploy-prod-parking-free-slot-calculation:
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/prod'
    needs: test
    concurrency: deploy-prod-parking-free-slot-calculation
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Create .env file
        uses: noi-techpark/github-actions/env-file@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}
        env:
          # General deployment options
          X_COMPOSE_PROJECT_NAME: ${{ env.PROJECT_NAME }}
          X_DOCKER_IMAGE: ${{ env.DOCKER_IMAGE }}
          X_DOCKER_TAG: ${{ env.DOCKER_TAG }}

          # Program specific env variables
          X_AUTHENTICATION_SERVER: https://auth.opendatahub.com/auth/
          X_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET_PROD }}
          X_CLIENT_ID: odh-mobility-datacollector
          X_ODH_MOBILITY_API_NINJA: https://mobility.api.opendatahub.com/v2
          X_ODH_MOBILITY_API_WRITER: 	https://mobility.share.opendatahub.bz.it
          X_PROVENANCE_LINEAGE: NOI
          X_PROVENANCE_NAME: ${{ env.PROJECT_NAME }}
          X_PROVENANCE_VERSION: ${{ github.sha }}
          # run job every n seconds
          X_JOB_SCHEDULE_SEC: 300

      - name: Build and push images
        uses: noi-techpark/github-actions/docker-build-and-push@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure
          docker-username: ${{ github.actor }}
          docker-password: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy application
        uses: noi-techpark/github-actions/docker-deploy@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure/ansible
          hosts: "prod"
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          docker-username: "noi-techpark-bot"
          docker-password: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          project-name: ${{ env.PROJECT_NAME }}